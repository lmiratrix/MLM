{
  "hash": "20bb9a740809d97520088e336abd3da6",
  "result": {
    "markdown": "---\ntitle: \"Simple tables, plots, and model diagnostics\"\nauthor: \"Luke Miratrix\"\neditor: \n  markdown: \n    wrap: sentence\n---\n\n::: {.cell}\n\n:::\n\n\nIn this document we give a few simple plots and summary tables that may be useful for final projects and other things as well.\nThis includes a few simple model diagnostic plots to check for extreme outliers and whatnot.\n\nIt is a bit of a hodge-podge, but skimming to get some ideas is definitely worthwhile.\n\n## National Youth Survey Example\n\nOur running example is the National Youth Survey (NYS) data as described in Raudenbush and Bryk, page 190.\nThis data comes from a survey in which the same students were asked yearly about their acceptance of 9 \"deviant\" behaviors (such as smoking marijuana, stealing, etc.).\nThe study began in 1976, and followed two cohorts of children, starting at ages 11 and 14 respectively.\nWe will analyze the first 5 years of data.\n\nAt each time point, we have measures of:\n\n-   `ATTIT`, the attitude towards deviance, with higher numbers implying higher tolerance for deviant behaviors.\n-   `EXPO`, the \"exposure\", based on asking the children how many friends they had who had engaged in each of the \"deviant\" behaviors.\n\nBoth of these variables have been transformed to a logarithmic scale to reduce skew.\n\nFor each student, we have:\n\n-   Gender (binary)\n-   Minority status (binary)\n-   Family income, in units of \\$10K (this can be either categorical or continuous).\n\n### Getting the data ready\n\nWe'll focus on the first cohort, from ages 11-15.\nFirst, let's read the data.\nNote that this data frame is in \"wide format\".\nThat is, there is only one row for each student, with all the different observations for that student in different columns of that one row.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nnyswide <- read_csv(\"data/nyswide.csv\")\nhead(nyswide)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 6 × 14\n     ID ATTIT.11 EXPO.11 ATTIT.12 EXPO.12 ATTIT.13 EXPO.13 ATTIT.14 EXPO.14\n  <dbl>    <dbl>   <dbl>    <dbl>   <dbl>    <dbl>   <dbl>    <dbl>   <dbl>\n1     3     0.11   -0.37     0.2    -0.27     0      -0.37     0      -0.27\n2     8     0.29    0.42     0.29    0.2      0.11    0.42     0.51    0.2 \n3     9     0.8     0.47     0.58    0.52     0.64    0.2      0.75    0.47\n4    15     0.44    0.07     0.44    0.32     0.89    0.47     0.75    0.26\n5    33     0.2    -0.27     0.64   -0.27     0.69   -0.27    NA      NA   \n6    45     0.11    0.26     0.37   -0.17     0.37    0.14     0.37    0.14\n# ℹ 5 more variables: ATTIT.15 <dbl>, EXPO.15 <dbl>, FEMALE <dbl>,\n#   MINORITY <dbl>, INCOME <dbl>\n```\n:::\n:::\n\n\nFor our purposes, we want it in \"long format\", i.e. each student has multiple rows for the different observations.\nThe `pivot_longer()` command does this for us.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nnys1 <- nyswide |> \n  pivot_longer(ATTIT.11:EXPO.15, names_to = \"score\") |> \n  mutate(outcome = word(score, 1, 1, sep = \"\\\\.\"),\n         age = as.numeric(word(score, 2, 2, sep = \"\\\\.\")),\n         age_fac = factor(age)) |> \n  select(-score) |> \n  pivot_wider(names_from = outcome) |> \n  # drop missing ATTIT values\n  drop_na(ATTIT)\n\nhead( nys1 )\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 6 × 8\n     ID FEMALE MINORITY INCOME   age age_fac ATTIT  EXPO\n  <dbl>  <dbl>    <dbl>  <dbl> <dbl> <fct>   <dbl> <dbl>\n1     3      1        0      3    11 11       0.11 -0.37\n2     3      1        0      3    12 12       0.2  -0.27\n3     3      1        0      3    13 13       0    -0.37\n4     3      1        0      3    14 14       0    -0.27\n5     3      1        0      3    15 15       0.11 -0.17\n6     8      0        0      4    11 11       0.29  0.42\n```\n:::\n:::\n\n\nJust to get a sense of the data, let's plot each age as a boxplot\n\n\n::: {.cell}\n\n```{.r .cell-code}\n  ggplot(nys1, aes(age_fac, ATTIT)) +\n    geom_boxplot() + \n    labs(title = \"Boxplot of attitude towards deviance by age\", \n         x = \"Age\", y = \"Attitude towards deviance\")\n```\n\n::: {.cell-output-display}\n![](summary_plots_files/figure-html/unnamed-chunk-3-1.png){width=672}\n:::\n:::\n\n\n*Note:* The boxplot's \"x\" variable is the group.\nYou get one box per group.\nThe \"y\" variable is the data we are making boxplots of.\n\nNote some features of the data:\n\n-   First, we see that `ATTIT` goes up over time.\n-   Second, we see the variation of points also goes up over time. This is evidence of heteroskedasticity.\n\nIf we plot individual lines we have:\n\n\n::: {.cell}\n\n```{.r .cell-code}\nnys1 |> \n  drop_na() |> \n  ggplot(aes(age, ATTIT, group=ID)) +\n    geom_line(alpha=0.2, position = \"jitter\") + \n    labs(title = \"Individual trajectories of attitude towards deviance over time\",\n         x = \"Age\",\n         y =\"Attitude towards deviance\")\n```\n\n::: {.cell-output-display}\n![](summary_plots_files/figure-html/unnamed-chunk-4-1.png){width=672}\n:::\n:::\n\n\nNote how we have correlation of residuals: some students have systematically lower trajectories and some students have systematically higher trajectories (although there is a lot of bouncing around).\n\n## Tabulating data (Categorical variables)\n\nWe can tabulate data as so:\n\n\n::: {.cell}\n\n```{.r .cell-code}\ntable(nys1$age)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n\n 11  12  13  14  15 \n202 209 230 220 218 \n```\n:::\n:::\n\n\nor\n\n\n::: {.cell}\n\n```{.r .cell-code}\ntable(nys1$MINORITY, nys1$age)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n   \n     11  12  13  14  15\n  0 159 165 182 175 175\n  1  43  44  48  45  43\n```\n:::\n:::\n\n\nInterestingly, we have more observations for later ages.\n\nWe can make \"proportion tables\" as well:\n\n\n::: {.cell}\n\n```{.r .cell-code}\nprop.table( table( nys1$MINORITY, nys1$INCOME  ), margin=1 )\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n   \n          1       2       3       4       5       6       7       8       9\n  0 0.06075 0.13551 0.18341 0.18107 0.14369 0.10981 0.06893 0.05257 0.00935\n  1 0.28251 0.41704 0.12556 0.05830 0.05830 0.02242 0.01345 0.00000 0.00000\n   \n         10\n  0 0.05491\n  1 0.02242\n```\n:::\n:::\n\n\nThe margin determines what adds up to 100%.\n\n## Summary stats (continuous variables)\n\nThe `tableone` package is useful:\n\n\n::: {.cell}\n\n```{.r .cell-code}\n  library(tableone)\n  \n# sample mean  \n  CreateTableOne(data = nys1,\n                 vars = c(\"ATTIT\"))\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n                   \n                    Overall    \n  n                 1079       \n  ATTIT (mean (SD)) 0.33 (0.27)\n```\n:::\n\n```{.r .cell-code}\n# you can also stratify by a variables of interest\n  CreateTableOne(data = nys1,\n                 vars = c(\"ATTIT\"), \n                 strata = c(\"FEMALE\"))\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n                   Stratified by FEMALE\n                    0           1           p      test\n  n                  559         520                   \n  ATTIT (mean (SD)) 0.37 (0.27) 0.29 (0.27) <0.001     \n```\n:::\n\n```{.r .cell-code}\n# you can also include both binary variables\n  CreateTableOne(data = nys1, \n                 vars = c(\"ATTIT\", \"agefac\"),  # include both binary and continuous variables here\n                 factorVars = c(\"agefac\"), # include only binary variables here\n                 strata = c(\"FEMALE\"))\n```\n\n::: {.cell-output .cell-output-stderr}\n```\nWarning in ModuleReturnVarsExist(vars, data): The data frame does not have:\nagefac Dropped\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nWarning in ModuleReturnVarsExist(factorVars, data): The data frame does not\nhave: agefac Dropped\n```\n:::\n\n::: {.cell-output .cell-output-stdout}\n```\n                   Stratified by FEMALE\n                    0           1           p      test\n  n                  559         520                   \n  ATTIT (mean (SD)) 0.37 (0.27) 0.29 (0.27) <0.001     \n```\n:::\n:::\n\n\n## Table of summary stats\n\nYou can easily make pretty tables using the `stargazer` package:\n\n\n::: {.cell messages='false'}\n\n```{.r .cell-code}\n  library(stargazer)\n```\n\n```\n\nPlease cite as: \n```\n\n```\n Hlavac, Marek (2022). stargazer: Well-Formatted Regression and Summary Statistics Tables.\n```\n\n```\n R package version 5.2.3. https://CRAN.R-project.org/package=stargazer \n```\n\n```{.r .cell-code}\n# to include all variables\n  stargazer(nys1, header = FALSE)\n```\n\n\n\\begin{table}[!htbp] \\centering \n  \\caption{} \n  \\label{} \n\\begin{tabular}{@{\\extracolsep{5pt}}lccccc} \n\\\\[-1.8ex]\\hline \n\\hline \\\\[-1.8ex] \nStatistic & \\multicolumn{1}{c}{N} & \\multicolumn{1}{c}{Mean} & \\multicolumn{1}{c}{St. Dev.} & \\multicolumn{1}{c}{Min} & \\multicolumn{1}{c}{Max} \\\\ \n\\hline \\\\[-1.8ex] \n\\hline \\\\[-1.8ex] \n\\end{tabular} \n\\end{table} \n:::\n\n\nYou can include only some of the variables and omit stats that are not of interest:\n\n\n::: {.cell messages='false'}\n\n```{.r .cell-code}\n# to include only variables of interest\n  stargazer(nys1[2:7], header=FALSE, \n            omit.summary.stat = c(\"p25\", \"p75\", \"min\", \"max\"), # to omit percentiles\n            title = \"Table 1: Descriptive statistics\")\n```\n\n\n\\begin{table}[!htbp] \\centering \n  \\caption{Table 1: Descriptive statistics} \n  \\label{} \n\\begin{tabular}{@{\\extracolsep{5pt}}lccc} \n\\\\[-1.8ex]\\hline \n\\hline \\\\[-1.8ex] \nStatistic & \\multicolumn{1}{c}{N} & \\multicolumn{1}{c}{Mean} & \\multicolumn{1}{c}{St. Dev.} \\\\ \n\\hline \\\\[-1.8ex] \n\\hline \\\\[-1.8ex] \n\\end{tabular} \n\\end{table} \n:::\n\n\nSee the `stargazer` help file for how to set/change more of the options: https://cran.r-project.org/web/packages/stargazer/stargazer.pdf\n\n## High School and Beyond Example\n\nFor this part, we'll use the HSB data to summarize variables by group/school.\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# load data \ndat <- read_dta(\"data/hsb.dta\")\n```\n:::\n\n\n## Summarizing by group\n\nTo plot summaries by group, first aggregate your data, and plot the results.\nLike so:\n\n\n::: {.cell}\n\n```{.r .cell-code}\naggdat = dat %>% \n  group_by(schoolid, sector) %>%\n  summarize( per.fem = mean( female ) )\n```\n\n::: {.cell-output .cell-output-stderr}\n```\n`summarise()` has grouped output by 'schoolid'. You can override using the\n`.groups` argument.\n```\n:::\n\n```{.r .cell-code}\nhead( aggdat )\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 6 × 3\n# Groups:   schoolid [6]\n  schoolid sector per.fem\n     <dbl>  <dbl>   <dbl>\n1     1224      0   0.596\n2     1288      0   0.44 \n3     1296      0   0.646\n4     1308      1   0    \n5     1317      1   1    \n6     1358      0   0.367\n```\n:::\n:::\n\n\nThe including sector (a level 2 variable) is a way to ensure it gets carried through to the aggregated results.\nNeat trick.\n\nAnyway, we then plot:\n\n\n::: {.cell}\n\n```{.r .cell-code}\nqplot( aggdat$per.fem,\n       main = \"Percent female students\", \n       xlab = \"\")\n```\n\n::: {.cell-output .cell-output-stderr}\n```\nWarning: `qplot()` was deprecated in ggplot2 3.4.0.\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\n`stat_bin()` using `bins = 30`. Pick better value with `binwidth`.\n```\n:::\n\n::: {.cell-output-display}\n![](summary_plots_files/figure-html/unnamed-chunk-13-1.png){width=672}\n:::\n:::\n\n\nNote the single sex (catholic) schools.\nWe can facet to see both groups:\n\n\n::: {.cell}\n\n```{.r .cell-code}\nqplot( per.fem, data=aggdat,\n       main = \"Percent female students\", \n       xlab = \"\") +\n  facet_wrap( ~ sector )\n```\n\n::: {.cell-output .cell-output-stderr}\n```\n`stat_bin()` using `bins = 30`. Pick better value with `binwidth`.\n```\n:::\n\n::: {.cell-output-display}\n![](summary_plots_files/figure-html/unnamed-chunk-14-1.png){width=672}\n:::\n:::\n\n\n## Diagnostic plots\n\nWe can also make some disagnostic plots for our model.\nfirst, let's fit a random intercept model.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nm1 <- lmer(mathach ~ 1 + ses + (1|schoolid), data=dat)\narm::display(m1)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nlmer(formula = mathach ~ 1 + ses + (1 | schoolid), data = dat)\n            coef.est coef.se\n(Intercept) 12.66     0.19  \nses          2.39     0.11  \n\nError terms:\n Groups   Name        Std.Dev.\n schoolid (Intercept) 2.18    \n Residual             6.09    \n---\nnumber of obs: 7185, groups: schoolid, 160\nAIC = 46653.2, DIC = 46637\ndeviance = 46641.0 \n```\n:::\n:::\n\n\nWe can check if some of our assumptions are being grossly violated, i.e. residuals at all levels are normally distributed.\n\n\n::: {.cell}\n\n```{.r .cell-code}\n  qplot(ranef(m1)$schoolid[,1],\n       main = \"Histogram of random intercepts\", xlab=\"\")\n```\n\n::: {.cell-output .cell-output-stderr}\n```\n`stat_bin()` using `bins = 30`. Pick better value with `binwidth`.\n```\n:::\n\n::: {.cell-output-display}\n![](summary_plots_files/figure-html/unnamed-chunk-16-1.png){width=672}\n:::\n\n```{.r .cell-code}\n  qplot(resid(m1), \n       main = \"Hisogram of residuals\")\n```\n\n::: {.cell-output .cell-output-stderr}\n```\n`stat_bin()` using `bins = 30`. Pick better value with `binwidth`.\n```\n:::\n\n::: {.cell-output-display}\n![](summary_plots_files/figure-html/unnamed-chunk-16-2.png){width=672}\n:::\n:::\n\n\nWe can check for heteroskedasticity by plotting residuals against predicted values\n\n\n::: {.cell}\n\n```{.r .cell-code}\n  dat$yhat  = predict(m1)\n  dat$resid = resid(m1)\n  \n  ggplot(dat, aes(yhat, resid)) + \n      geom_point(alpha=0.3) + \n      geom_smooth() + \n      labs(title = \"Residuals against predicted values\",\n           x = \"Predicted values\", y =\"Residuals\")\n```\n\n::: {.cell-output .cell-output-stderr}\n```\n`geom_smooth()` using method = 'gam' and formula = 'y ~ s(x, bs = \"cs\")'\n```\n:::\n\n::: {.cell-output-display}\n![](summary_plots_files/figure-html/unnamed-chunk-17-1.png){width=672}\n:::\n:::\n\n\nIt looks reasonable (up to the discrete and bounded nature of our data).\nNo major weird curves in the loess line through the residuals means linearity is a reasonable assumption.\nThat being said, our nominal SEs around our loess line are tight, so the mild curve is probably evidence of *some* model misfit.\n\nWe can also look at the distribution of random effects using the `lattice` package\n\n\n::: {.cell}\n\n```{.r .cell-code}\n  library(lattice)\n  qqmath(ranef(m1, condVar=TRUE), strip=FALSE)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n$schoolid\n```\n:::\n\n::: {.cell-output-display}\n![](summary_plots_files/figure-html/unnamed-chunk-18-1.png){width=672}\n:::\n:::\n",
    "supporting": [
      "summary_plots_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}