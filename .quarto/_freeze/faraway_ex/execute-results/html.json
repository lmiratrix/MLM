{
  "hash": "779c2d20e0801dee74db28679f4044c1",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"Code for Faraway Example\"\nauthor: \"Luke Miratrix\"\neditor: \n  markdown: \n    wrap: sentence\n---\n\n::: {.cell}\n\n:::\n\n\nThis handout gives the code for the longitudinal data example from Faraway book chapter 9 (see iPac on Canvas).\nSee that chapter to get explanations, etc., or just run code line by line to see what you get!\nNote: this code uses ggplot.\nBook uses another plotting package called `lattice`; don't bother with `lattice`.\n\n## R Setup\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary( arm )\nlibrary( ggplot2 )\nlibrary( plyr )\n\n# Install package from textbook to get the data by \n# running this line once.\n#install.packages( \"faraway\" )\n```\n:::\n\n\n## First Example\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# load the data\nlibrary(faraway)\ndata(psid)\nhead(psid)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n  age educ sex income year person\n1  31   12   M   6000   68      1\n2  31   12   M   5300   69      1\n3  31   12   M   5200   70      1\n4  31   12   M   6900   71      1\n5  31   12   M   7500   72      1\n6  31   12   M   8000   73      1\n```\n\n\n:::\n\n```{.r .cell-code}\n# Make log-transform of income\npsid$log_income = with( psid, log( income + 100 ) )\n                            \n                            \n# Look at some plots\npsid.sub = subset( psid, person < 21 )\nggplot( data=psid.sub, aes( x=year, y=income ) ) +\n    facet_wrap( ~ person ) +\n    geom_line()\n```\n\n::: {.cell-output-display}\n![](faraway_ex_files/figure-html/unnamed-chunk-3-1.png){width=672}\n:::\n\n```{.r .cell-code}\nggplot( data=psid.sub, aes( x=year, y=log_income, group=person ) ) +\n    facet_wrap( ~ sex ) +\n    geom_line()\n```\n\n::: {.cell-output-display}\n![](faraway_ex_files/figure-html/unnamed-chunk-3-2.png){width=672}\n:::\n\n```{.r .cell-code}\n# Simple regression on a single person\nlmod <- lm( log_income ~ I(year-78), subset=(person==1), psid)\ncoef(lmod)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n (Intercept) I(year - 78) \n  9.40910950   0.08342068 \n```\n\n\n:::\n\n```{.r .cell-code}\n# Now do linear regression on everyone\nsum.stat = ddply( psid, .(person), function( dat ) {\n    lmod <- lm(log(income) ~ I(year-78), data=dat )\n    cc = coef(lmod)\n    names(cc) = c(\"intercept\",\"slope\")\n    c( cc, sex=dat$sex[[1]] )\n} )\nhead( sum.stat )\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n  person intercept       slope sex\n1      1  9.399957  0.08426670   2\n2      2  9.819091  0.08281031   2\n3      3  7.893863  0.03131149   1\n4      4  7.853027  0.07585135   1\n5      5  8.033453 -0.04738677   1\n6      6  9.673443  0.08953380   2\n```\n\n\n:::\n\n```{.r .cell-code}\nplot( slope ~ intercept, data=sum.stat, xlab=\"Intercept\",ylab=\"Slope\")\n```\n\n::: {.cell-output-display}\n![](faraway_ex_files/figure-html/unnamed-chunk-3-3.png){width=672}\n:::\n\n```{.r .cell-code}\nboxplot( slope ~ sex, data=sum.stat )\n```\n\n::: {.cell-output-display}\n![](faraway_ex_files/figure-html/unnamed-chunk-3-4.png){width=672}\n:::\n\n```{.r .cell-code}\n# Is rate of income growth different by sex?\nt.test( slope ~ sex, data=sum.stat )\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n\n\tWelch Two Sample t-test\n\ndata:  slope by sex\nt = 2.3786, df = 56.736, p-value = 0.02077\nalternative hypothesis: true difference in means between group 1 and group 2 is not equal to 0\n95 percent confidence interval:\n 0.00507729 0.05916871\nsample estimates:\nmean in group 1 mean in group 2 \n     0.08903346      0.05691046 \n```\n\n\n:::\n\n```{.r .cell-code}\n# Is initial income different by sex?\nt.test( intercept ~ sex, data=sum.stat )\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n\n\tWelch Two Sample t-test\n\ndata:  intercept by sex\nt = -8.2199, df = 79.719, p-value = 3.065e-12\nalternative hypothesis: true difference in means between group 1 and group 2 is not equal to 0\n95 percent confidence interval:\n -1.4322218 -0.8738792\nsample estimates:\nmean in group 1 mean in group 2 \n       8.229275        9.382325 \n```\n\n\n:::\n:::\n\n\n## Fitting the model\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Fitting our model\nlibrary(lme4)\npsid$cyear <- psid$year-78\nmmod <- lmer(log(income) ~ cyear*sex + age + educ + (cyear|person), psid)\ndisplay(mmod)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nlmer(formula = log(income) ~ cyear * sex + age + educ + (cyear | \n    person), data = psid)\n            coef.est coef.se\n(Intercept)  6.67     0.54  \ncyear        0.09     0.01  \nsexM         1.15     0.12  \nage          0.01     0.01  \neduc         0.10     0.02  \ncyear:sexM  -0.03     0.01  \n\nError terms:\n Groups   Name        Std.Dev. Corr \n person   (Intercept) 0.53          \n          cyear       0.05     0.19 \n Residual             0.68          \n---\nnumber of obs: 1661, groups: person, 85\nAIC = 3839.8, DIC = 3751.2\ndeviance = 3785.5 \n```\n\n\n:::\n\n```{.r .cell-code}\n# refit with the lmerTest library to get p-values\nlibrary( lmerTest )\nmmod <- lmer(log(income) ~ cyear*sex + age + educ + (cyear|person), psid)\nsummary(mmod)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nLinear mixed model fit by REML. t-tests use Satterthwaite's method [\nlmerModLmerTest]\nFormula: log(income) ~ cyear * sex + age + educ + (cyear | person)\n   Data: psid\n\nREML criterion at convergence: 3819.8\n\nScaled residuals: \n     Min       1Q   Median       3Q      Max \n-10.2310  -0.2134   0.0795   0.4147   2.8254 \n\nRandom effects:\n Groups   Name        Variance Std.Dev. Corr\n person   (Intercept) 0.2817   0.53071      \n          cyear       0.0024   0.04899  0.19\n Residual             0.4673   0.68357      \nNumber of obs: 1661, groups:  person, 85\n\nFixed effects:\n             Estimate Std. Error        df t value Pr(>|t|)    \n(Intercept)  6.674211   0.543323 81.176972  12.284  < 2e-16 ***\ncyear        0.085312   0.008999 78.915123   9.480 1.14e-14 ***\nsexM         1.150312   0.121292 81.772542   9.484 8.06e-15 ***\nage          0.010932   0.013524 80.837434   0.808   0.4213    \neduc         0.104209   0.021437 80.722319   4.861 5.65e-06 ***\ncyear:sexM  -0.026306   0.012238 77.995359  -2.150   0.0347 *  \n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nCorrelation of Fixed Effects:\n           (Intr) cyear  sexM   age    educ  \ncyear       0.020                            \nsexM       -0.104 -0.098                     \nage        -0.874  0.002 -0.026              \neduc       -0.597  0.000  0.008  0.167       \ncyear:sexM -0.003 -0.735  0.156 -0.010 -0.011\n```\n\n\n:::\n:::\n\n\n## Model Diagnostics\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# First add our residuals and fitted values to our original data\n# (We can do this since we have no missing data so the rows will line up\n# correctly)\npsid = transform( psid,  resid=resid( mmod ),\n                  fit = fitted( mmod ) )\nhead( psid )\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n  age educ sex income year person log_income cyear       resid      fit\n1  31   12   M   6000   68      1   8.716044   -10  0.06719915 8.632316\n2  31   12   M   5300   69      1   8.594154    -9 -0.13201639 8.707478\n3  31   12   M   5200   70      1   8.575462    -8 -0.22622748 8.782641\n4  31   12   M   6900   71      1   8.853665    -7 -0.01852759 8.857804\n5  31   12   M   7500   72      1   8.935904    -6 -0.01030887 8.932967\n6  31   12   M   8000   73      1   8.999619    -5 -0.02093325 9.008130\n```\n\n\n:::\n\n```{.r .cell-code}\n# Here is a qqplot for each sex\nggplot( data=psid ) +\n    facet_wrap( ~ sex ) +\n    stat_qq( aes( sample=resid ) )\n```\n\n::: {.cell-output-display}\n![](faraway_ex_files/figure-html/unnamed-chunk-5-1.png){width=672}\n:::\n\n```{.r .cell-code}\n# If you want to add the lines, you have to do a little more work\nslopes = ddply( psid, .(sex), function( dat ) {\n    y <- quantile(dat$resid, c(0.25, 0.75))\n    x <- qnorm(c(0.25, 0.75))\n    slope <- as.numeric( diff(y)/diff(x) )\n    int <- y[[1]] - slope * x[[1]]\n    c( slope=slope, int=int )\n} )\nslopes\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n  sex     slope        int\n1   F 0.4324568 0.10579138\n2   M 0.2473357 0.03321435\n```\n\n\n:::\n\n```{.r .cell-code}\nggplot( data=psid ) +\n    facet_wrap( ~ sex ) +\n    stat_qq( aes( sample=resid ) ) +\n    geom_abline( data=slopes, aes( slope=slope, intercept=int ) )\n```\n\n::: {.cell-output-display}\n![](faraway_ex_files/figure-html/unnamed-chunk-5-2.png){width=672}\n:::\n:::\n\n\nAnd a residual plot\n\n::: {.cell}\n\n```{.r .cell-code}\npsid$educ_levels = cut(psid$educ, c(0,8.5,12.5,20), labels=c( \"Less than HS\", \"HS\", \"Beyond HS\" ) )\nggplot( data=psid, aes( x=fit, y=resid ) ) +\n    facet_wrap( ~ educ_levels ) +\n    geom_point()\n```\n\n::: {.cell-output-display}\n![](faraway_ex_files/figure-html/unnamed-chunk-6-1.png){width=672}\n:::\n:::\n\n\n### Lattice code\n\nFor reference, we can also do this:\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# This is doing it from the lattice package\nlibrary( lattice )\nqqmath(~resid(mmod) | sex, psid)\n```\n\n::: {.cell-output-display}\n![](faraway_ex_files/figure-html/unnamed-chunk-7-1.png){width=672}\n:::\n\n```{.r .cell-code}\n# fancier with some lines.  The points should lie on the line\n# if we have normal residuals.  (We don't.)\nqqmath(~ resid(mmod)  | sex, data = psid,\n       panel = function(x, ...) {\n           panel.qqmathline(x, ...)\n           panel.qqmath(x, ...)\n       })\n```\n\n::: {.cell-output-display}\n![](faraway_ex_files/figure-html/unnamed-chunk-7-2.png){width=672}\n:::\n:::\n",
    "supporting": [
      "faraway_ex_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}