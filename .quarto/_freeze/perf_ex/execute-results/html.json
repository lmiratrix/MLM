{
  "hash": "9c8a01f9d891905e43c43dcfa0621848",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"Example of a three-level model of clustered data\"\nauthor: \"Luke Miratrix\"\neditor: \n  markdown: \n    wrap: sentence\neditor_options: \n  chunk_output_type: console\n---\n\n\n\nIn this chapter we illustrate fitting a three level model (with clusters inside of clusters) and extracting the various components from it.\n\nWe illustrate on a dataset, `peft.dta`, extensively discussed in Rabe-Hesketh and Skrondal.\nI am replicating the model they propose in chapter 8.4.\nThe story is as follows: the data set is a collection of measurements for a test-retest of two peak expiratory flow measurement devices (in English, patients were told to exhale into a device to measure their lung capacity, and they did so twice for two different measurement devices, so four times total).\nWe want to understand whether the types of meter are different, and also understand variation in subjects lung capacities, and variation in the measurement error of the meters.\n\nWe are going to view this as three-level data. We have multiple measurements (time, level 1) nested inside device type (device, level 2) nested inside subject (level 3).\nWe might imagine that different subjects have different lung capacities. We also might imagine that different subjects are going to have different biases when using the two different meters. The two observations for each meter allows us to understand the variability of measurements for a single meter for a given subject, and looking at how these vary across subjects allows us to understand how much the biases move across individuals.\n\n\n\n::: {.cell}\n\n:::\n\n\n\n## Load the data\n\nWe first load the data.\nIn the following we load the data and look at the first few lines. We see that each subject had two measurements from the standard and from the mini Wright flow meter.\n \n\n::: {.cell}\n\n```{.r .cell-code}\npefr = read.dta( \"data/pefr.dta\" )\n\nhead( pefr )\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n  id wp1 wp2 wm1 wm2\n1  1 494 490 512 525\n2  2 395 397 430 415\n3  3 516 512 520 508\n4  4 434 401 428 444\n5  5 476 470 500 500\n6  6 557 611 600 625\n```\n\n\n:::\n:::\n\n\n \n## Reshape the data (Optional section)\n\nThis section illustrates some advanced reshaping techniques.\nIn particular we reshape the data twice to deal with the time and the device as different levels.\n\nHere we go:\n\n::: {.cell}\n\n```{.r .cell-code}\ndat <- pefr %>%\n  pivot_longer(cols = c(wp1, wm1, wp2, wm2), \n               names_to = c( \"device_time\" ),\n               values_to = \"flow\" ) %>%\n  separate_wider_position( device_time, \n                           widths = c( device = 2, time = 1 ) )\n\ndat\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 68 × 4\n      id device time   flow\n   <dbl> <chr>  <chr> <dbl>\n 1     1 wp     1       494\n 2     1 wm     1       512\n 3     1 wp     2       490\n 4     1 wm     2       525\n 5     2 wp     1       395\n 6     2 wm     1       430\n 7     2 wp     2       397\n 8     2 wm     2       415\n 9     3 wp     1       516\n10     3 wm     1       520\n# ℹ 58 more rows\n```\n\n\n:::\n:::\n\n\nLet's see what we got:\n\n::: {.cell}\n\n```{.r .cell-code}\nhead( dat )\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 6 × 4\n     id device time   flow\n  <dbl> <chr>  <chr> <dbl>\n1     1 wp     1       494\n2     1 wm     1       512\n3     1 wp     2       490\n4     1 wm     2       525\n5     2 wp     1       395\n6     2 wm     1       430\n```\n\n\n:::\n\n```{.r .cell-code}\nsubset( pefr, id==1 )\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n  id wp1 wp2 wm1 wm2\n1  1 494 490 512 525\n```\n\n\n:::\n:::\n\n\nWe see the measurements correspond to the first row of the original `pefr` data.\n\nLet's also check our second person to see if the measurements have the appropriate labels. They do.\n\n::: {.cell}\n\n```{.r .cell-code}\nsubset( dat, id==2 )\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 4 × 4\n     id device time   flow\n  <dbl> <chr>  <chr> <dbl>\n1     2 wp     1       395\n2     2 wm     1       430\n3     2 wp     2       397\n4     2 wm     2       415\n```\n\n\n:::\n\n```{.r .cell-code}\nsubset( pefr, id==2)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n  id wp1 wp2 wm1 wm2\n2  2 395 397 430 415\n```\n\n\n:::\n:::\n\n\nAnother sanity check:\n\n::: {.cell}\n\n```{.r .cell-code}\ntable( dat$id )\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n\n 1  2  3  4  5  6  7  8  9 10 11 12 13 14 15 16 17 \n 4  4  4  4  4  4  4  4  4  4  4  4  4  4  4  4  4 \n```\n\n\n:::\n:::\n\nWe have four measurements, still, for each person.\n\nWhen reshaping data, one typically has to fiddle with all of the commands and check the results a few times to get it right.  ChatGPT or similar is really good at helping with this.\n\n\n## Plot the data\nWe can look at the data.\nThe following illustrates getting different colors and symbols depending on covariate information:\n\n::: {.cell}\n\n```{.r .cell-code}\ndat$id = as.factor( dat$id )\ndat$device = as.factor( dat$device )\ndat$time = as.factor( dat$time )\nggplot( data=dat, aes( x=id, y=flow, col=device, pch=time ) ) + \n    geom_jitter( width=0.2, height=0, size = 2 ) +\n  theme_minimal()\n```\n\n::: {.cell-output-display}\n![](perf_ex_files/figure-html/unnamed-chunk-6-1.png){width=672}\n:::\n:::\n\n\nWe see lots of subject variation.  It is unclear if one device is systematically higher or lower than the other, but it does look like the devices are often more similar to each other, indicating individual-level device bias.\n\n\n\n## The mathematical model\n\n*Level 1:* We have, for individual $i$ using machine $j$ at time $t$:\n\n$$ Y_{tji} = \\beta_{0ji} + \\beta_{1} t + \\epsilon_{tji} .$$\nNote the using the subscript of time as a covariate.  Some might prefer $time_{tji} = 1$ and $time_{tji}=2$ and then writing $\\beta_1 time_{tji}$.\n\nThe $\\beta_{1}$ allows for a time effect of the second measurement being systematically lower or higher than the first.\nWe pool this across all subjects and machines.\n\n*Level 2:* Our machine-level intercepts for each subject are\n\n$$ \\beta_{0ji} = \\gamma_{0i} + \\gamma_1 D_j + u_{ji} $$\n\nwith $D_j = 1\\{ j = wp \\}$ being an indicator (dummy variable) for the second machine.\nThe $\\gamma_1$ allows a systematic bias for the two machines (so the wp machine could tend to give larger readings than the wm machine, for example).\nOverall, the above says each machine expected reading varies around the subject's lung capacity, but that these expected readings will vary around the subjects true capacity by the $u_{ji}$.\nActual readings for subject $i$ on machine $j$ will hover around $\\beta_{ji}$ if we had the subject test over and over, according to our model (not including fatigue captured by the time coefficient).\n\n*Level 3:* Finally our subject intercepts are\n$$ \\gamma_{0i} = \\mu + w_{i} . $$\nThe overall population lung capacity is $\\mu$.  Subjects have larger or smaller lung capacity depending on their $w_{i}$.  This is the subject-to-subject variability.\n\nThe $u_{ji}$ and $w_i$ are each normally distributed, and independent from each other. \nThe $w_i$ are how the subjects vary (i.e., their different lung capacities).\nThe $u_{ji}$ are the individual biases of a machine for a given subject.\nLooking at our plot, we see that subjects vary a lot, and machines vary sometimes within a subject (the centers of the pairs of colored points tend to be close, but not always), and the residual variance tends to be small (colored points are close together).\nWe should see this in our model output.\nLet's find out!\n\n## Fit the model\n\nWe have a classic three-level model with time and device as covariates:\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary( lme4 )\nM1 = lmer( flow ~ 1 + device + time + (1|id) + (1|device:id), data=dat )\ndisplay( M1 )\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nlmer(formula = flow ~ 1 + device + time + (1 | id) + (1 | device:id), \n    data = dat)\n            coef.est coef.se\n(Intercept) 454.43    27.84 \ndevicewp     -6.03     8.05 \ntime2        -1.03     4.37 \n\nError terms:\n Groups    Name        Std.Dev.\n device:id (Intercept)  19.72  \n id        (Intercept) 111.99  \n Residual               18.01  \n---\nnumber of obs: 68, groups: device:id, 34; id, 17\nAIC = 682.8, DIC = 709.1\ndeviance = 689.9 \n```\n\n\n:::\n:::\n\n\nWe interact device and id to generate unique ids for all the device groups nested within subject.\n\nNow let's connect some pieces:\n\n* The main effects estimate $\\mu = 455.46$ (average measured lung capacity) and $\\gamma_1 = -6.03$ (the wp device's bias vs. the wm device) and $\\beta_1 = -1.03$ (reduction in lung capacity in second measurement occasion).  \n* The z-score of $z = -6.03 / 8.05 < 1$ means there is no evidence of systematic bias of one machine compared to the other.\n* The estimated standard deviation of actual lung capacity is 112.  Some people have much larger capacity than other people.\n* The estimated standard deviation of how two different machines will measure the same person is $19.72$.  Different machines will tend to systematically give different average measurements for the same subject. I.e., some subjects will look good on a wm machine, and some on a wp machine.\n* The estimated standard deviation of how much a repeated measurement of the same machine on the same person will vary is 18.  The machines are relatively precise, given the variation in the population.\n* The amount of variance explained by lung variation is $112^2 / (19.72^2 + 111.99^2 + 18.01^2) = 0.94636$, i.e., most of it.\n\n\n<!--# Appendix (Optional): base plot package\nHere is how to build the plot without ggplot:\n\n::: {.cell}\n\n```{.r .cell-code}\nplot( flow ~ as.numeric(id), data=dat, pch=ifelse( time==1, 21, 22 ),\n      col=ifelse( device==\"wp\", \"red\", \"green\" ) )\nlegend( \"bottomleft\", legend=c(\"WP-1\", \"WP-2\",\"WM-1\", \"WM-2\"),\n        pch=c(21,22,21,22),\n        col=c(\"red\",\"red\",\"green\",\"green\") )\n```\n\n::: {.cell-output-display}\n![](perf_ex_files/figure-html/unnamed-chunk-8-1.png){width=672}\n:::\n:::\n\n-->\n",
    "supporting": [
      "perf_ex_files/figure-html"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}