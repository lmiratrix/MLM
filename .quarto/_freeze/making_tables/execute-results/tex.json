{
  "hash": "32e39c35af2078eed5faf4704e092f6e",
  "result": {
    "markdown": "---\ntitle: \"Making tables in Markdown\"\nauthor: \"Luke Miratrix\"\neditor: \n  markdown: \n    wrap: sentence\n---\n\n\n\n\n\nYou might want to make tables.\nYou should probably make charts, but every so often a table is a nice thing to have.\n\nTo illustrate, I make some fake data\n\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\nlibrary( tidyverse )\ndat = tibble( G = sample( LETTERS[1:5], 100, replace=TRUE ),\n              X = rnorm( 100 ),\n              rp = sample( letters[1:3], 100, replace=TRUE ),\n              Z = sample( c(\"tx\",\"co\"), 100, replace=TRUE ),\n              Y = rnorm( 100 ) )\n```\n:::\n\n\n\nWe can make summery of it by our grouping variable:\n\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\nsdat <- dat %>% group_by( G) %>%\n    summarise( EY = mean( Y ),\n               pT = mean( Z == \"tx\" ),\n               sdY = sd( Y ) )\n```\n:::\n\n\n\nOur intermediate results:\n\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\nsdat\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 5 x 4\n  G          EY    pT   sdY\n  <chr>   <dbl> <dbl> <dbl>\n1 A      0.0515 0.529 0.846\n2 B     -0.0246 0.519 0.733\n3 C      0.0265 0.778 1.00 \n4 D     -0.0404 0.55  1.11 \n5 E     -0.363  0.667 1.07 \n```\n:::\n:::\n\n\n\nSay our grouping variable is a set of codes for something more special.\nWe can merge in better names by first making a small \"cross-walk\" of the ID codes to the full names, and then merging them to our results:\n\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\nnames = tribble( ~ G, ~ name,\n                 \"A\", \"fred\",\n                 \"B\", \"doug\",\n                 \"C\", \"xiao\",\n                 \"D\", \"lily\",\n                 \"E\", \"unknown\" )\nnames\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 5 x 2\n  G     name   \n  <chr> <chr>  \n1 A     fred   \n2 B     doug   \n3 C     xiao   \n4 D     lily   \n5 E     unknown\n```\n:::\n\n```{.r .cell-code}\nsdat = left_join( sdat, names ) %>%\n    relocate( name)\n```\n\n::: {.cell-output .cell-output-stderr}\n```\nJoining with `by = join_by(G)`\n```\n:::\n:::\n\n\n\nFinally, the easiest way to make a table is with the `kable` command.\n\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\nknitr::kable( sdat, digits=2 )\n```\n\n::: {.cell-output-display}\n|name    |G  |    EY|   pT|  sdY|\n|:-------|:--|-----:|----:|----:|\n|fred    |A  |  0.05| 0.53| 0.85|\n|doug    |B  | -0.02| 0.52| 0.73|\n|xiao    |C  |  0.03| 0.78| 1.00|\n|lily    |D  | -0.04| 0.55| 1.11|\n|unknown |E  | -0.36| 0.67| 1.07|\n:::\n:::\n\n\n\nThis is a great workhorse table-making tool!\nThere are expansion R packages as well, e.g. `kableExtra`, which can do lots of fancy customizable stuff.\n\n## Making a \"table one\"\n\nThe \"table one\" is the first table in a lot of papers that show general means of different variables for different groups.\nThe `tableone` package is useful:\n\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\nlibrary(tableone)\n\n# sample mean  \nCreateTableOne(data = dat,\n               vars = c(\"G\", \"Z\", \"X\"))\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n               \n                Overall      \n  n               100        \n  G (%)                      \n     A             17 (17.0) \n     B             27 (27.0) \n     C             18 (18.0) \n     D             20 (20.0) \n     E             18 (18.0) \n  Z = tx (%)       60 (60.0) \n  X (mean (SD)) -0.02 (1.00) \n```\n:::\n\n```{.r .cell-code}\n# you can also stratify by a variables of interest\ntb <- CreateTableOne(data = dat,\n                     vars = c(\"X\", \"G\", \"Y\"), \n                     strata = c(\"Z\"))\ntb\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n               Stratified by Z\n                co           tx            p      test\n  n               40            60                    \n  X (mean (SD)) 0.01 (0.88)  -0.04 (1.08)   0.812     \n  G (%)                                     0.404     \n     A             8 (20.0)      9 (15.0)             \n     B            13 (32.5)     14 (23.3)             \n     C             4 (10.0)     14 (23.3)             \n     D             9 (22.5)     11 (18.3)             \n     E             6 (15.0)     12 (20.0)             \n  Y (mean (SD)) 0.07 (0.84)  -0.16 (1.00)   0.231     \n```\n:::\n:::\n\n\n\nYou can then use `kable` as so:\n\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\nprint(tb$ContTable, printToggle = FALSE) %>%\n    knitr::kable()\n```\n\n::: {.cell-output-display}\n|              |co          |tx           |p     |test |\n|:-------------|:-----------|:------------|:-----|:----|\n|n             |40          |60           |      |     |\n|X (mean (SD)) |0.01 (0.88) |-0.04 (1.08) |0.812 |     |\n|Y (mean (SD)) |0.07 (0.84) |-0.16 (1.00) |0.231 |     |\n:::\n:::\n\n\n\n## Table of summary stats\n\nYou can also easily make pretty tables using the `stargazer` package.\nYou need to ensure the data is a data.frame, not tibble, because `stargazer` is old school.\nIt appears to only do continuous variables.\n\nFinally, you need to modify the R code chunk so it looks like this:\n\n\n\n::: {.cell layout-align=\"center\" messages='false'}\n\n:::\n\n\n\nso the output of stargazer gets formatted properly in your R Markdown.\n\n\n\n::: {.cell layout-align=\"center\" messages='false'}\n\n```{.r .cell-code}\nlibrary(stargazer)\n\nstargazer(as.data.frame(dat))\n```\n\n\n% Table created by stargazer v.5.2.3 by Marek Hlavac, Social Policy Institute. E-mail: marek.hlavac at gmail.com\n% Date and time: Thu, Aug 17, 2023 - 19:25:01\n\\begin{table}[!htbp] \\centering \n  \\caption{} \n  \\label{} \n\\begin{tabular}{@{\\extracolsep{5pt}}lccccc} \n\\\\[-1.8ex]\\hline \n\\hline \\\\[-1.8ex] \nStatistic & \\multicolumn{1}{c}{N} & \\multicolumn{1}{c}{Mean} & \\multicolumn{1}{c}{St. Dev.} & \\multicolumn{1}{c}{Min} & \\multicolumn{1}{c}{Max} \\\\ \n\\hline \\\\[-1.8ex] \nX & 100 & $-$0.021 & 0.999 & $-$2.353 & 3.376 \\\\ \nY & 100 & $-$0.067 & 0.941 & $-$2.403 & 2.117 \\\\ \n\\hline \\\\[-1.8ex] \n\\end{tabular} \n\\end{table} \n:::\n\n\n\nYou can include only some of the variables and omit stats that are not of interest:\n\n\n\n::: {.cell layout-align=\"center\" messages='false'}\n\n```{.r .cell-code}\n# to include only variables of interest\nstargazer(as.data.frame(dat), header=FALSE, \n          omit.summary.stat = c(\"p25\", \"p75\", \"min\", \"max\"), # to omit percentiles\n          title = \"Table 1: Descriptive statistics\")\n```\n\n\n\\begin{table}[!htbp] \\centering \n  \\caption{Table 1: Descriptive statistics} \n  \\label{} \n\\begin{tabular}{@{\\extracolsep{5pt}}lccc} \n\\\\[-1.8ex]\\hline \n\\hline \\\\[-1.8ex] \nStatistic & \\multicolumn{1}{c}{N} & \\multicolumn{1}{c}{Mean} & \\multicolumn{1}{c}{St. Dev.} \\\\ \n\\hline \\\\[-1.8ex] \nX & 100 & $-$0.021 & 0.999 \\\\ \nY & 100 & $-$0.067 & 0.941 \\\\ \n\\hline \\\\[-1.8ex] \n\\end{tabular} \n\\end{table} \n:::\n\n\n\nSee the `stargazer` help file for how to set/change more of the options: https://cran.r-project.org/web/packages/stargazer/stargazer.pdf\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {
      "knitr": [
        "{\"type\":\"list\",\"attributes\":{},\"value\":[]}"
      ]
    },
    "preserve": null,
    "postProcess": false
  }
}