---
title: "Making tables in Markdown"
author: "Luke Miratrix"
editor: 
  markdown: 
    wrap: sentence
---

```{r setup, include=FALSE}
library(tidyverse)
library( stargazer )
knitr::opts_chunk$set(echo = TRUE, 
                      fig.width = 5,
                      fig.height = 3,
                      out.width = "75%", 
                      fig.align = "center")
options(list(dplyr.summarise.inform = FALSE))
theme_set( theme_classic() )
```

You might want to make tables.
You should probably make charts, but every so often a table is a nice thing to have.

To illustrate, I make some fake data

```{r}
library( tidyverse )
dat = tibble( G = sample( LETTERS[1:5], 100, replace=TRUE ),
              X = rnorm( 100 ),
              rp = sample( letters[1:3], 100, replace=TRUE ),
              Z = sample( c("tx","co"), 100, replace=TRUE ),
              Y = rnorm( 100 ) )
```

We can make summery of it by our grouping variable:

```{r}
sdat <- dat %>% group_by( G) %>%
    summarise( EY = mean( Y ),
               pT = mean( Z == "tx" ),
               sdY = sd( Y ) )
```

Our intermediate results:

```{r}
sdat
```

Say our grouping variable is a set of codes for something more special.
We can merge in better names by first making a small "cross-walk" of the ID codes to the full names, and then merging them to our results:

```{r}
names = tribble( ~ G, ~ name,
                 "A", "fred",
                 "B", "doug",
                 "C", "xiao",
                 "D", "lily",
                 "E", "unknown" )
names

sdat = left_join( sdat, names ) %>%
    relocate( name)
```

Finally, the easiest way to make a table is with the `kable` command.

```{r}
knitr::kable( sdat, digits=2 )
```

This is a great workhorse table-making tool!
There are expansion R packages as well, e.g. `kableExtra`, which can do lots of fancy customizable stuff.

## Making a "table one"

The "table one" is the first table in a lot of papers that show general means of different variables for different groups.
The `tableone` package is useful:

```{r}
library(tableone)

# sample mean  
CreateTableOne(data = dat,
               vars = c("G", "Z", "X"))

# you can also stratify by a variables of interest
tb <- CreateTableOne(data = dat,
                     vars = c("X", "G", "Y"), 
                     strata = c("Z"))
tb
```

You can then use `kable` as so:

```{r}
print(tb$ContTable, printToggle = FALSE) %>%
    knitr::kable()
```

## Table of summary stats

You can also easily make pretty tables using the `stargazer` package.
You need to ensure the data is a data.frame, not tibble, because `stargazer` is old school.
It appears to only do continuous variables.

Finally, you need to modify the R code chunk so it looks like this:

```{r, results="asis", messages=FALSE}
```

so the output of stargazer gets formatted properly in your R Markdown.

```{r, results="asis", messages=FALSE}
library(stargazer)

stargazer(as.data.frame(dat))
```

You can include only some of the variables and omit stats that are not of interest:

```{r, results="asis", messages=FALSE}
# to include only variables of interest
stargazer(as.data.frame(dat), header=FALSE, 
          omit.summary.stat = c("p25", "p75", "min", "max"), # to omit percentiles
          title = "Table 1: Descriptive statistics")

```

See the `stargazer` help file for how to set/change more of the options: https://cran.r-project.org/web/packages/stargazer/stargazer.pdf
